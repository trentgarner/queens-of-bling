<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Kidd Custom Apparel" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
        <!-- SEO Meta Tags-->
    <meta name="description" content="Around - Multipurpose Bootstrap HTML Template">
    <meta name="keywords" content="bootstrap, business, corporate, coworking space, services, creative agency, dashboard, e-commerce, mobile app showcase, saas, multipurpose, product landing, shop, software, ui kit, web studio, landing, dark mode, html5, css3, javascript, gallery, slider, touch, creative">
    <meta name="author" content="Createx Studio">
    <!-- Viewport-->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Favicon and Touch Icons-->
    <link rel="apple-touch-icon" sizes="180x180" href="<%= asset_path("theme/favicon/apple-touch-icon.png") %>">
    <link rel="icon" type="image/png" sizes="32x32" href="<%= asset_path("theme/favicon/favicon-32x32.png") %>">
    <link rel="icon" type="image/png" sizes="16x16" href="<%= asset_path("theme/favicon/favicon-16x16.png") %>">
    <link rel="manifest" href="<%= asset_path("theme/favicon/site.webmanifest") %>">
    <link rel="mask-icon" color="#6366f1" href="<%= asset_path("theme/favicon/safari-pinned-tab.svg") %>">
    <meta name="msapplication-TileColor" content="#080032">
    <meta name="msapplication-config" content="<%= asset_path("theme/favicon/browserconfig.xml") %>">
    <meta name="theme-color" content="white">
    <!-- Theme mode-->
    <script>
      (function () {
        const mode = window.localStorage.getItem('mode');
        const root = document.documentElement;
        const isDark = mode === 'dark';
        const themeValue = isDark ? 'dark' : 'light';
        root.classList.toggle('dark-mode', isDark);
        root.setAttribute('data-theme', themeValue);
        root.setAttribute('data-coreui-theme', themeValue);
      })();
    </script>
    <!-- Page loading styles-->
    <style>
      .page-loading {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        -webkit-transition: all .4s .2s ease-in-out;
        transition: all .4s .2s ease-in-out;
        background-color: #fff;
        opacity: 0;
        visibility: hidden;
        z-index: 9999;
      }
      .dark-mode .page-loading {
        background-color: #121519;
      }
      .page-loading.active {
        opacity: 1;
        visibility: visible;
      }
      .page-loading-inner {
        position: absolute;
        top: 50%;
        left: 0;
        width: 100%;
        text-align: center;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
        -webkit-transition: opacity .2s ease-in-out;
        transition: opacity .2s ease-in-out;
        opacity: 0;
      }
      .page-loading.active > .page-loading-inner {
        opacity: 1;
      }
      .page-loading-inner > span {
        display: block;
        font-family: 'Inter', sans-serif;
        font-size: 1rem;
        font-weight: normal;
        color: #6f788b;
      }
      .dark-mode .page-loading-inner > span {
        color: #fff;
        opacity: .6;
      }
      .page-spinner {
        display: inline-block;
        width: 2.75rem;
        height: 2.75rem;
        margin-bottom: .75rem;
        vertical-align: text-bottom;
        background-color: #d7dde2; 
        border-radius: 50%;
        opacity: 0;
        -webkit-animation: spinner .75s linear infinite;
        animation: spinner .75s linear infinite;
      }
      .dark-mode .page-spinner {
        background-color: rgba(255,255,255,.25);
      }
      @-webkit-keyframes spinner {
        0% {
          -webkit-transform: scale(0);
          transform: scale(0);
        }
        50% {
          opacity: 1;
          -webkit-transform: none;
          transform: none;
        }
      }
      @keyframes spinner {
        0% {
          -webkit-transform: scale(0);
          transform: scale(0);
        }
        50% {
          opacity: 1;
          -webkit-transform: none;
          transform: none;
        }
      }
      
    </style>
    <!-- Page loading scripts-->
    <script>
      (function () {
        window.onload = function () {
          const preloader = document.querySelector('.page-loading');
          preloader.classList.remove('active');
          setTimeout(function () {
            preloader.remove();
          }, 1500);
        };
      })();
      
    </script>
    <!-- Import Google Font-->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&amp;display=swap" rel="stylesheet" id="google-font">
    <%= stylesheet_link_tag "theme_fonts", "data-turbo-track": "reload" %>

    <%= yield :head %>

    <link rel="manifest" href="/manifest.json">
    <%= favicon_link_tag "theme/favicon/favicon.ico" %>
    <link rel="apple-touch-icon" href="<%= asset_path('theme/favicon/apple-touch-icon.png') %>">

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
    <%= javascript_include_tag "theme/vendor_bundle", defer: true %>
    <script>
      (function () {
        const root = document.documentElement;
        const applyMode = (nextMode, checkbox) => {
          if (nextMode === 'dark') {
            root.classList.add('dark-mode');
            if (checkbox) checkbox.checked = true;
            window.localStorage.setItem('mode', 'dark');
          } else {
            root.classList.remove('dark-mode');
            if (checkbox) checkbox.checked = false;
            window.localStorage.setItem('mode', 'light');
          }
        };
        const init = () => {
          const checkbox = document.querySelector('[data-bs-toggle="mode"] .form-check-input');
          if (!checkbox || checkbox.dataset.modeBound === 'true') return;
          checkbox.dataset.modeBound = 'true';
          const storedMode = window.localStorage.getItem('mode');
          if (storedMode === 'dark' || storedMode === 'light') {
            applyMode(storedMode, checkbox);
          } else {
            applyMode(checkbox.checked ? 'dark' : 'light', checkbox);
          }
          checkbox.addEventListener('change', () => {
            applyMode(checkbox.checked ? 'dark' : 'light', checkbox);
          }, { once: false });
        };
        document.addEventListener('turbo:load', init);
        document.addEventListener('DOMContentLoaded', init);
        init();
      })();
    </script>
    <script>
      document.addEventListener('turbo:load', function () {
        window.scrollTo({ top: 0, behavior: 'auto' });
      });
    </script>
  </head>

    <body>
    <%= render "shared/navbar" %>

    <% if notice.present? %>
      <p class="alert alert-info mb-0"><%= notice %></p>
    <% end %>

    <% if alert.present? %>
      <p class="alert alert-danger mb-0"><%= alert %></p>
    <% end %>

    <%= yield %>

    <%= render "shared/footer" %>
  </body>

</html>



 
